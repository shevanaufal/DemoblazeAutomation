[{"line":1,"elements":[{"start_timestamp":"2025-05-17T11:11:11.666Z","line":3,"name":"Successfully create a new user","description":"","id":"create-user;successfully-create-a-new-user","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1520000,"status":"passed"},"line":4,"name":"I have user details with first name \"Sheva\", last name \"Naufal\", and a unique email","match":{"arguments":[{"val":"\"Sheva\"","offset":36},{"val":"\"Naufal\"","offset":55}],"location":"apiAutomation.stepDefinitions.CreateUser.generateUserDetails(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":1469504000,"status":"passed"},"line":5,"name":"I send a request to create the user","match":{"location":"apiAutomation.stepDefinitions.CreateUser.createUser()"},"keyword":"When "},{"result":{"duration":25359000,"status":"passed"},"line":6,"name":"the user should be created successfully","match":{"location":"apiAutomation.stepDefinitions.CreateUser.verifyUserCreated()"},"keyword":"Then "}],"tags":[{"name":"@api"}]},{"start_timestamp":"2025-05-17T11:11:13.175Z","line":8,"name":"Attempt to create a user with an extremely long name","description":"","id":"create-user;attempt-to-create-a-user-with-an-extremely-long-name","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":150000,"status":"passed"},"line":9,"name":"I have user details with an excessively long first name","match":{"location":"apiAutomation.stepDefinitions.CreateUser.generateLongName()"},"keyword":"Given "},{"result":{"duration":382342000,"status":"passed"},"line":10,"name":"I send a request to create a user with a long name","match":{"location":"apiAutomation.stepDefinitions.CreateUser.createUserWithLongName()"},"keyword":"When "},{"result":{"duration":27915000,"status":"passed"},"line":11,"name":"the response should indicate a bad request","match":{"location":"apiAutomation.stepDefinitions.CreateUser.verifyBadRequest()"},"keyword":"Then "}],"tags":[{"name":"@api"}]}],"name":"Create User","description":"","id":"create-user","keyword":"Feature","uri":"file:src/test/resources/apiAutomation/features/createuser.feature","tags":[]},{"line":1,"elements":[{"start_timestamp":"2025-05-17T11:11:13.594Z","before":[{"result":{"duration":455000,"status":"passed"},"match":{"location":"apiAutomation.stepDefinitions.Hooks.ensureUserExists()"}}],"line":3,"name":"Successfully delete an existing user","description":"","id":"delete-user;successfully-delete-an-existing-user","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":159000,"status":"passed"},"line":4,"name":"I have an existing user","match":{"location":"apiAutomation.stepDefinitions.GetUserbyID.ensureUserExists()"},"keyword":"Given "},{"result":{"duration":357443000,"status":"passed"},"line":5,"name":"I delete the user","match":{"location":"apiAutomation.stepDefinitions.DeleteUser.deleteUser()"},"keyword":"When "},{"result":{"duration":956000,"status":"passed"},"line":6,"name":"the user should be deleted successfully","match":{"location":"apiAutomation.stepDefinitions.DeleteUser.verifyUserDeleted()"},"keyword":"Then "}],"tags":[{"name":"@api"},{"name":"@RequiresUser"}]}],"name":"Delete User","description":"","id":"delete-user","keyword":"Feature","uri":"file:src/test/resources/apiAutomation/features/deleteuser.feature","tags":[]},{"line":1,"elements":[{"start_timestamp":"2025-05-17T11:11:13.964Z","line":3,"name":"Retrieve all users","description":"","id":"get-users;retrieve-all-users","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":407362000,"status":"passed"},"line":4,"name":"I request all users","match":{"location":"apiAutomation.stepDefinitions.GetUsers.requestAllUsers()"},"keyword":"When "},{"result":{"duration":26071000,"status":"passed"},"line":5,"name":"the response should contain a list of users","match":{"location":"apiAutomation.stepDefinitions.GetUsers.verifyUsersList()"},"keyword":"Then "}],"tags":[{"name":"@api"}]}],"name":"Get Users","description":"","id":"get-users","keyword":"Feature","uri":"file:src/test/resources/apiAutomation/features/getuser.feature","tags":[]},{"line":1,"elements":[{"start_timestamp":"2025-05-17T11:11:14.403Z","before":[{"result":{"duration":395471000,"status":"passed"},"match":{"location":"apiAutomation.stepDefinitions.Hooks.ensureUserExists()"}}],"line":3,"name":"Retrieve a valid user","description":"","id":"get-user-by-id;retrieve-a-valid-user","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":296000,"status":"passed"},"line":4,"name":"I have an existing user","match":{"location":"apiAutomation.stepDefinitions.GetUserbyID.ensureUserExists()"},"keyword":"Given "},{"result":{"duration":361728000,"status":"passed"},"line":5,"name":"I request a user by ID","match":{"location":"apiAutomation.stepDefinitions.GetUserbyID.requestUserById()"},"keyword":"When "},{"result":{"duration":16785000,"status":"passed"},"line":6,"name":"the response should contain the user details","match":{"location":"apiAutomation.stepDefinitions.GetUserbyID.verifyUserDetails()"},"keyword":"Then "}],"tags":[{"name":"@api"},{"name":"@RequiresUser"}]},{"start_timestamp":"2025-05-17T11:11:15.186Z","line":10,"name":"Request a non-existent user","description":"","id":"get-user-by-id;request-a-non-existent-user","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":337400000,"status":"passed"},"line":11,"name":"I request a user with an invalid ID","match":{"location":"apiAutomation.stepDefinitions.GetUserbyID.requestInvalidUser()"},"keyword":"When "},{"result":{"duration":1682000,"status":"passed"},"line":12,"name":"the response should indicate user not found","match":{"location":"apiAutomation.stepDefinitions.GetUserbyID.verifyUserNotFound()"},"keyword":"Then "}],"tags":[{"name":"@api"}]}],"name":"Get User by ID","description":"","id":"get-user-by-id","keyword":"Feature","uri":"file:src/test/resources/apiAutomation/features/getuserbyid.feature","tags":[]},{"line":1,"elements":[{"start_timestamp":"2025-05-17T11:11:15.533Z","line":3,"name":"Successfully update an existing user","description":"","id":"update-user;successfully-update-an-existing-user","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":348000,"status":"passed"},"line":4,"name":"I have user details with first name \"Sheva\", last name \"Naufal\", and a unique email","match":{"arguments":[{"val":"\"Sheva\"","offset":36},{"val":"\"Naufal\"","offset":55}],"location":"apiAutomation.stepDefinitions.CreateUser.generateUserDetails(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":441260000,"status":"passed"},"line":5,"name":"I update the userâ€™s first name to \"Updated Sheva\"","match":{"arguments":[{"val":"\"Updated Sheva\"","offset":34}],"location":"apiAutomation.stepDefinitions.UpdateUser.updateUser(java.lang.String)"},"keyword":"When "},{"result":{"duration":840000,"status":"passed"},"line":6,"name":"the user's details should be updated successfully","match":{"location":"apiAutomation.stepDefinitions.UpdateUser.verifyUserUpdated()"},"keyword":"Then "}],"tags":[{"name":"@api"}]}],"name":"Update User","description":"","id":"update-user","keyword":"Feature","uri":"file:src/test/resources/apiAutomation/features/updateuser.feature","tags":[]}]